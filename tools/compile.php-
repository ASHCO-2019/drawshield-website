<?php

$keep = false;

if (PHP_OS == "Linux") {
    $targetDir = "/media/psf/Dropbox/Projects/drawshield/source/catalog/";
    $sourceDir = "/media/psf/Dropbox/Projects/draw-code/include/svg/";
} else {
    $targetDir = "/Users/karlwilcox/Dropbox/Projects/drawshield/source/catalog/";
    $sourceDir = "/Users/karlwilcox/Dropbox/Projects/draw-code/include/svg/";
}


$indexHtml = <<<EOT
---
pageTitle: %NAME% Charges
---
<!-- /catalog/charges/%NAME%/index.html starts -->
<p>%NAME%</p>

{% include png-gallery.html %}
<!-- /catalog/charges/%NAME%/index.html ends -->
EOT;

function nameonly($keyword) {
    $pos = strpos($keyword,'/');
    if ($pos) $keyword = substr($keyword,$pos + 1);
    return $keyword;
}

function matchBoth($folder, $keyword, $match) {
    $pos = strpos($keyword,'/');
    if ($pos) {
        return "$folder/$match" == $keyword;
    } // else
    return $keyword == $match;

}

function mapping($folder, $source, $target = null) {
    $mappings = [
        "alchemical/air", "alchemical-symbol-for-air",
        "alchemical/copper", "alchemical-symbol-for-copper",
        "alchemical/earth", "alchemical-symbol-for-earth",
        "alchemical/fire", "alchemical-symbol-for-fire",
        "alchemical/gold", "alchemical-symbol-for-gold",
        "alchemical/iron", "alchemical-symbol-for-iron",
        "alchemical/mercury", "alchemical-symbol-for-mercury",
        "alchemical/salt", "alchemical-symbol-for-salt",
        "alchemical/sulphur", "alchemical-symbol-for-sulphur",
        "alchemical/tin", "alchemical-symbol-for-tin",
        "alchemical/water", "alchemical-symbol-for-water",
        "astronomical/earth", "astronomical-symbol-for-earth",
        "astronomical/jupiter", "astronomical-symbol-for-jupiter",
        "astronomical/mars", "astronomical-symbol-for-mars",
        "astronomical/moon", "astronomical-symbol-for-moon",
        "astronomical/neptune", "astronomical-symbol-for-neptune",
        "astronomical/mercury", "astronomical-symbol-for-mercury",
        "astronomical/pluto", "astronomical-symbol-for-pluto",
        "astronomical/saturn", "astronomical-symbol-for-saturn",
        "astronomical/sun", "astronomical-symbol-for-sun",
        "astronomical/uranus", "astronomical-symbol-for-uranus",
        "astronomical/venus", "astronomical-symbol-for-venus",
        "celestial/sun", "sun-in-his-splendour",
        "annulet-braced-of2", "2-annulets-braced",
        "annulet-conjunct-of2", "2-annulets-conjunct",
        "annulet-interlaced-of2", "2-annulets-interlaced",
        "annulet-interlaced-of3", "3-annulets-interlaced",
        "annulet-concentric-of2", "2-annulets-concentric",
        "annulet-concentric-of3", "3-annulets-concentric",
        "annulet-concentric-of3", "3-annulets-concentric",
        "annulet-concentric-of4", "4-annulets-concentric",
        "annulet-concentric-of5", "5-annulets-concentric",
        "annulet-concentric-of6", "6-annulets-concentric",
        "annulet-concentric-of7", "7-annulets-concentric",
        "annulet-concentric-of8", "8-annulets-concentric",
        "annulet-concentric-of9", "9-annulets-concentric",
        "annulet-concentric-of10", "10-annulets-concentric",
        "arch-double", "double-arch",
        "clan-ross", "badge-of-clan-ross",
        "bridge-three-arches", "bridge-of-three-arches",
        "bridge-two-arches", "bridge-of-two-arches",
        "fountain-natural", "natural-fountain",
        "bear-head", "bears-head",
        "crane-with-stone", "crane-holding-a-stone",
        "wing-pair-2-conjoined-in-lure", "pair-of-wings-conjoined-in-lure",
        "wing-pair-2", "pair-of-wings",
        "sun-rays", "suns-rays",
        "cap-jester", "jesters-cap",
        "cap-mercury", "cap-of-Mercury",
        "mask-comedy", "comedy-mask",
        "breeches", "pair of breeches",
        "mask-tragedy", "tragedy-mask",
        "saltire", "saltire-couped",
        "plain-cross", "3 crosses",
        "scissors-pair-2", "pair-of-scissors",
        "shears-pair-2", "pair-of-shears",
        "calvary-1", "cross-calvary-on-1-step",
        "calvary-2", "cross-calvary-on-2-steps",
        "calvary-3", "cross-calvary-on-3-steps",
        "calvary-4", "cross-calvary-on-4-steps",
        "calvary-5", "cross-calvary-on-5-steps",
        "calvary-6", "cross-calvary-on-6-steps",
        "calvary-7", "cross-calvary-on-7-steps",
        "calvary-8", "cross-calvary-on-8-steps",
        "calvary-9", "cross-calvary-on-9-steps",
        "calvary", "cross-calvary",
        "celtic", "celtic-cross",
        "couped", "cross-couped",
        "egyptian", "Egyptian-cross",
        "greek", "Greek-cross",
        "long", "long-cross",
        "saltire", "3 saltires",
        "crook-basel", "crook-of-basel",
        "paternoster", "paternoster-cross",
        "patriarchal", "patriarchal-cross",
        "patriarchal-1", "patriarchal-cross-on-1-step",
        "patriarchal-2", "patriarchal-cross-on-2-step",
        "patriarchal-3", "patriarchal-cross-on-3-step",
        "patriarchal-4", "patriarchal-cross-on-4-step",
        "patriarchal-5", "patriarchal-cross-on-5-step",
        "patriarchal-6", "patriarchal-cross-on-6-step",
        "patriarchal-7", "patriarchal-cross-on-7-step",
        "patriarchal-8", "patriarchal-cross-on-8-step",
        "patriarchal-9", "patriarchal-cross-on-9-step",
        "portate", "cross-portate",
        "russian", "Russian-cross",
        "st-james", "cross-of-St.-James",
        "tau", "tau-cross",
        "antique", "antique-crown",
        "astral", "astral-crown",
        "baron", "barons-crown",
        "ducal", "ducal-crown",
        "duke", "dukes-crown",
        "earl", "earls-crown",
        "eastern", "eastern-crown",
        "king-of-arms", "king-of-arms-crown",
        "marquis", "marquis-crown",
        "mural", "mural-crown",
        "naval", "naval-crown",
        "palisado", "crown-palisado",
        "chevron", "3 chevrons",
        "royal", "royal-crown",
        "saxon", "saxon-crown",
        "vallary", "crown-vallary",
        "viscount", "viscounts-crown",
        "wheat-bundle-3", "bundle-of-corn",
        "rose-lancaster", "rose-of-lancaster",
        "rose-tudor", "tudor-rose",
        "rose-natural", "natural-rose",
        "rose-york", "rose-of-York",
        "fret", "3 frets",
        "book-modern-open", "modern-book-open",
        "book-modern-closed", "modern-book-closed",
        "tulip-bundle", "bundle-of-tulips",
        "board-alquerque", "alquerque-board",
        "board-nine-mens-morris", "nine-mens-morris-board",
        "board-twelve-mens-morris", "twelve-mens-morris-board",
        "bbox", "bounding-box",
        "bottle-leather", "leather-bottle",
        "hand-benediction", "hand-of-benediction",
        "maiden-head-bust", "maidens-head-and-bust",
        "maiden-head-bust-nude", "maidens-head-and-bust-nude",
        "man-head-bust", "mans-head-and-bust",
        "mullet-of4-pierced", "mullet-of-4-pierced",
        "mullet-of4", "mullet-of-4",
        "mullet-of5-pierced", "mullet-of-5-pierced",
        "mullet-of5-voided-interlaced", "mullet-of-5-voided-interlaced",
        "mullet-of5", "mullet-of-5",
        "mullet-of6-pierced", "mullet-of-6-pierced",
        "mullet-of6", "mullet-of-6",
        "mullet-of7-pierced", "mullet-of-7-pierced",
        "mullet-of7-voided-interlaced", "mullet-of-7-voided-interlaced",
        "mullet-of7", "mullet-of-7",
        "mullet-of8-pierced", "mullet-of-8-pierced",
        "mullet-of8-voided-interlaced", "mullet-of-8-voided-interlaced",
        "mullet-of8", "mullet-of-8",
        "mullet-of9-pierced", "mullet-of-9-pierced",
        "mullet-of9", "mullet-of-9",
        "mullet-of10-pierced", "mullet-of-10-pierced",
        "mullet-of10", "mullet-of-10",
        "stone-flint", "flint-stone",
        "reed-bundle-3", "bundle-of-reeds",
        "arrow-broad", "broad-arrow",
        "arrow-bundle", "bundle-of-arrows",
        "cramp-bundle-3", "bundle-of-cramps",
        "cramp-pair-2", "pair-of-cramps",
        "flail-insaltire-2", "pair-of-flails-in-saltire",
        "key-pair-2", "pair-of-keys",
        "cherry-pair-2", "pair-of-cherries",
        "palm-leaf-insaltire-2", "pair-of-palm-leaves-in-saltire",
        "palm-tree-insaltire-2", "pair-of-palm-trees-in-saltire",
        "trees-hurst-of-couped", "hurst-of-trees",
        "staff-ragged", "ragged-staff",
        "sphinx-egyptian", "egyptian-sphinx",
        "sphinx-greek", "greek-sphinx",
    ];

    $mapCount = count($mappings);

    if ($source == null) { // translate target back to source
        for ($i = 1; $i < $mapCount; $i += 2) {
            if ($target == $mappings[$i]) {
                return nameonly($mappings[$i-1]);
            }
        }
        return $target;
    } else { // translate source to target
        for ($i = 0; $i < $mapCount; $i += 2) {
            if (matchBoth($folder, $mappings[$i], $source)) {
                return $mappings[$i+1];
            }
        }
        return $source;
    }
    return null; // shouldn't happen
}


/*
**	Create a catalog of charge images
*/
function charges($folder) {
    global $targetDir, $sourceDir, $keep;

    $sources = scandir($sourceDir . "charges/$folder" );
    $targets = scandir($targetDir. "charges/$folder" ); 

    /*
    **	Delete any in target dir NOT in source dir
    */

    foreach ($targets as $targetItem) {
        if ($targetItem[0] == '.' || $targetItem == "index.html") continue;
        $toFind = mapping($folder, null, substr($targetItem,0,-4)) . ".svg";
        if (!in_array($toFind, $sources)) {
            $doomedFile = "$targetDir/charges/$folder/$targetItem";
            echo "Removing $doomedFile\n";
            unlink ($doomedFile);
        }
    }

    /*
    **	Create anything in source dir NOT in target dir
    *    OR if source is newer than target
    */
    @mkdir("temp");
    foreach ($sources as $sourceItem) {
        if ($sourceItem[0] == '.' || substr($sourceItem,-4) != '.svg') continue;
        $toFind = mapping($folder, substr($sourceItem,0,-4), null) . ".png";
        if (!in_array($toFind, $targets) || 
                filemtime("$sourceDir/charges/$folder/$sourceItem") >
                filemtime("$targetDir/charges/$folder/$toFind")) {
            $specifier = is_numeric($toFind[0]) ? ' ' : ' a ';
            $blazon = rawurlencode("argent $specifier " .
             str_replace('-',' ',substr($toFind,0,-4)) . " sable");
            $execString = 'wget -q -O ' . "temp/$sourceItem" . 
            ' "http://drawshield.home/include/quickimage.php?blazon=' . $blazon .
            '&outputformat=svg&size=400&effect=none&nomask=1&raw=1"';
            echo "Executing $execString\n";
            exec($execString);
            $execString2 = "convert temp/$sourceItem '$targetDir/charges/$folder/$toFind'";
            // echo "Executing $execString2\n";
            exec($execString2);
            if (!$keep) unlink("temp/$sourceItem");
        }
    }
}

if ($argc > 1) {
    $allCharges = array_splice($argv, 1);
} else {
    $allCharges = scandir($sourceDir . "/charges");
}
foreach($allCharges as $chargeDir) {
    if (!file_exists("$sourceDir/charges/$chargeDir")) {
        echo "No source folder named $chargeDir\n";
        continue;
    }
    if ($chargeDir[0] == '.') continue;
    if (!file_exists("$targetDir/charges/$chargeDir")) {
        mkdir("$targetDir/charges/$chargeDir");
        file_put_contents(
            "$targetDir/charges/$chargeDir/index.html",
            str_replace('%NAME%',ucwords($chargeDir),$indexHtml));
    }
    charges($chargeDir);
}
